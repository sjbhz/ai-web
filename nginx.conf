#user  nginx;
worker_processes  1;
#error_log  /var/log/nginx/error.log warn;
#pid        /var/run/nginx.pid;
events {
  worker_connections  1024;
}
http {
  client_max_body_size 500M;
  #include       /etc/nginx/mime.types;
  include       /apps/conf/nginx_80/mime.types;
  default_type  application/octet-stream;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  #access_log  /var/log/nginx/access.log  main;
  sendfile        on;
  keepalive_timeout  65;
  gzip_static  on;
  # 开启 Gzip
    gzip on;
  # 设置允许压缩的文件最小字节数
  gzip_min_length 1k;
  # 设置压缩级别，取值 1-9，数字越大压缩的越好，也更消耗 CPU 的资源和时间
  gzip_comp_level 2;
  # 设置允许进行压缩的文件类型。JavaScript 有多种形式。其中的值可以在 mime.types 文件中找到。
  gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png application/vnd.ms-fontobject font/ttf font/opentype font/x-woff image/svg+xml;
  # 是否在 HTTP header 中添加 Vary: Accept-Encoding，建议开启
  gzip_vary on;
  # IE 6 及以下 禁用
  gzip_disable "MSIE [1-6].";
  # 设置压缩所需要的缓冲区大小
  gzip_buffers 4 16k;
  server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;
    error_page  502 503 504  = /apps/svr/nginx-1.20.2/html/50x.html;
    location /qrobot-web {
        #root   /usr/share/nginx/html;
        root  /apps/svr/nginx-1.20.2/html/;
        try_files $uri $uri /qrobot-web/index.html;
    		index  index.html index.html;
    }
    location /qrobot-web/microS {
        proxy_http_version 1.1;
        rewrite ^/qrobot-web/microS/(.*)$ /$1 break;
        proxy_pass http://auto-zuul:10010;
    }
    location /qrobot-web/robotweb {
      proxy_http_version 1.1;
      proxy_set_header Connection "";
       
      #proxy_buffering off;
      #proxy_cache off;
      #chunked_transfer_encoding on;
      #tcp_nopush on;
      #tcp_nodelay on;
      #proxy_read_timeout 86400s;
      #proxy_send_timeout 86400s;
      
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;      
      
      rewrite  ^.+qrobot-web/robotweb/?(.*)$ /$1 break;
      proxy_pass http://127.0.0.1:7861/;
    }
    
    location /qrobot-web/images_robot/ {
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass http://127.0.0.1:7861/static/images/;
    }
 
    location /qrobot-web/robotwebchat {
      proxy_http_version 1.1;
      proxy_set_header Connection "";
       
      proxy_buffering off;
      proxy_cache off;
      chunked_transfer_encoding on;
      tcp_nopush on;
      tcp_nodelay on;
      proxy_read_timeout 86400s;
      proxy_send_timeout 86400s;
      
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;   
      
      limit_req zone=req_server burst=20;
      limit_conn conn_ip 2;
      limit_conn conn_server 5;
      error_page 503 =200 /dealwith_503;
      
      rewrite  ^.+qrobot-web/robotwebchat/?(.*)$ /$1 break;
      proxy_pass http://127.0.0.1:7861/;
    }
    
    location /qrobot-web/dealwith_503 {
      #add_header Content-type application/json;
      default_type application/json;
      set $ret_body '{"code":20001,"message":"操作太频繁了，请等一下"}';
      return 200 $ret_body;
    }
 
  }
}
